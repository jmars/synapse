// Generated by CoffeeScript 1.3.3
var Backbone, core;

Backbone = require('backbone');

core = require('synapse/core');

module.exports = {
  typeName: 'Backbone Model',
  checkObjectType: function(object) {
    return object instanceof Backbone.Model;
  },
  getHandler: function(object, key) {
    if (core.isFunction(object[key])) {
      return object[key]();
    } else {
      return object.get(key);
    }
  },
  setHandler: function(object, key, value) {
    var attrs;
    if (core.isFunction(object[key])) {
      return object[key](value);
    } else {
      attrs = {};
      attrs[key] = value;
      return object.set(attrs);
    }
  },
  onEventHandler: function(object, event, handler) {
    return object.bind(event, handler);
  },
  offEventHandler: function(object, event, handler) {
    return object.unbind(event, handler);
  },
  triggerEventHandler: function(object, event) {
    return object.trigger(event);
  },
  detectEvent: function(object, iface) {
    if (iface && !object[iface]) {
      return "change:" + iface;
    }
    return 'change';
  }
};
